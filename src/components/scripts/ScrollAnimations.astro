<script>
  class ScrollAnimations {
    private observer: IntersectionObserver
    private animatedElements: Set<Element>

    constructor() {
      this.animatedElements = new Set()
      this.observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const element = entry.target
              element.classList.add("animate-in")
              this.animatedElements.add(element)
              this.observer.unobserve(element)
            }
          })
        },
        {
          root: null,
          rootMargin: "0px",
          threshold: 0.1,
        }
      )
    }

    public init() {
      // Find all sections with data-animate attribute
      const sections = document.querySelectorAll("[data-animate]")
      sections.forEach((section) => {
        this.observer.observe(section)
      })
    }
  }

  // Initialize animations when DOM is loaded
  document.addEventListener("DOMContentLoaded", () => {
    const scrollAnimations = new ScrollAnimations()
    scrollAnimations.init()
  })
</script>

<style is:global>
  /* Base styles for animated elements */
  [data-animate] {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
  }

  /* Animation when element enters viewport */
  [data-animate].animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Different animation delays for staggered effect */
  [data-animate-delay="100"] {
    transition-delay: 100ms;
  }
  [data-animate-delay="200"] {
    transition-delay: 200ms;
  }
  [data-animate-delay="300"] {
    transition-delay: 300ms;
  }
  [data-animate-delay="400"] {
    transition-delay: 400ms;
  }
  [data-animate-delay="500"] {
    transition-delay: 500ms;
  }
</style>
